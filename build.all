#!/bin/bash
echo -n "Do you need a proxy (say n if you don't know) ? [n]|y > "
read resp
PROXY=$resp
if [ "$PROXY" = "y" ]
then
  . ./gradle.properties  
# ./proxy.set
  echo Setting git proxies to http://$proxyHost:$proxyPort
  git config --global http.proxy http://$proxyHost:$proxyPort
  git config --global https.proxy http://$proxyHost:$proxyPort
else
  proxyHost=
  proxyPort=
# ./proxy.unset
  echo Unsetting git proxies
  git config --global --unset http.proxy
  git config --global --unset https.proxy
fi
#
export proxyHost proxyPort
#
chmod +x set.gradle.env checkout.sh update.sh
echo Setting env
. ./set.gradle.env
#
echo -----------------
echo Step 1 - Checkout
echo -----------------
./checkout.sh
#
echo Copying resources to olivsoft directory
#
cp build.gradle olivsoft
cp gradle.properties olivsoft
cp settings.gradle olivsoft
cd olivsoft
if [ "$PROXY" = "y" ]
then
# find . -name build.gradle -print 
  find . -name build.gradle -print -exec sed -i 's/\/\/ant.setproxy/ant.setproxy/g' {} \;
  sed -i 's/\/\/ant.setproxy/ant.setproxy/g' ./build.gradle
  find -type f -name "gradle.backup" | while read f; do
    mv "$f" "${f/.backup/.properties}";
  done
else
# find . -name build.gradle -print
  find . -name build.gradle -print -exec sed -i 's/ant.setproxy/\/\/ant.setproxy/g' {} \;
  sed -i 's/ant.setproxy/\/\/ant.setproxy/g' ./build.gradle
  find -type f -name "gradle.properties" | while read f; do
    mv "$f" "${f/.properties/.backup}";
  done
fi 
#
if [ "$JAVA_HOME" = "" ]
then
  echo JAVA_HOME is not set.
  echo Please modify the file set.gradle.env
  exit 1
fi  
echo JAVA_HOME is currently $JAVA_HOME
echo ---------------------
echo Step 2 - Now building
echo ---------------------
# ../gradlew build
cd release
../../gradlew shadowJar
echo If no error occurred, you can run the soft:
echo 'on Windows: olivsoft.bat'
echo 'on Linux: cd all-scripts; ./olivsoft'
echo 'on MacOS: cd all-scripts; ./olivsoft.mac'
echo 'on RasPI (with a small screen): cd all-scripts; ./olivsoft.small'
#
# Copying archives
# find . -name *-1.0.jar -print -exec cp {} ./build/libs \;
# find . -name *-3.0.1.5.jar -print 
